// Generated by view binder compiler. Do not edit!
package be.kuleuven.timetoclimb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import be.kuleuven.timetoclimb.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityImageEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView Back;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final ImageView imgProfile;

  @NonNull
  public final TextView lblEditProfile;

  private ActivityImageEditBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView Back,
      @NonNull Button btnUpdate, @NonNull ImageView imgProfile, @NonNull TextView lblEditProfile) {
    this.rootView = rootView;
    this.Back = Back;
    this.btnUpdate = btnUpdate;
    this.imgProfile = imgProfile;
    this.lblEditProfile = lblEditProfile;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityImageEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityImageEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_image_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityImageEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Back;
      ImageView Back = ViewBindings.findChildViewById(rootView, id);
      if (Back == null) {
        break missingId;
      }

      id = R.id.btnUpdate;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.imgProfile;
      ImageView imgProfile = ViewBindings.findChildViewById(rootView, id);
      if (imgProfile == null) {
        break missingId;
      }

      id = R.id.lblEditProfile;
      TextView lblEditProfile = ViewBindings.findChildViewById(rootView, id);
      if (lblEditProfile == null) {
        break missingId;
      }

      return new ActivityImageEditBinding((ConstraintLayout) rootView, Back, btnUpdate, imgProfile,
          lblEditProfile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
